// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: blog_tag.proto

package blog

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateTagRequest struct {
	// Tạo tag
	Tag *Tag `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
}

func (m *CreateTagRequest) Reset()                    { *m = CreateTagRequest{} }
func (*CreateTagRequest) ProtoMessage()               {}
func (*CreateTagRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{0} }

func (m *CreateTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type CreateTagResponse struct {
	// Trả về tag vừa tạo
	Tag *Tag `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
}

func (m *CreateTagResponse) Reset()                    { *m = CreateTagResponse{} }
func (*CreateTagResponse) ProtoMessage()               {}
func (*CreateTagResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{1} }

func (m *CreateTagResponse) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type GetTagsRequest struct {
	// Phân trang
	Data *Pagination `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *GetTagsRequest) Reset()                    { *m = GetTagsRequest{} }
func (*GetTagsRequest) ProtoMessage()               {}
func (*GetTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{2} }

func (m *GetTagsRequest) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTagsResponse struct {
	// Trả về danh sách tag
	Tag []*Tag `protobuf:"bytes,1,rep,name=tag" json:"tag,omitempty"`
	// Số lượng post có gắn tag
	NumberOfPost int32 `protobuf:"varint,2,opt,name=number_of_post,json=numberOfPost,proto3" json:"number_of_post,omitempty"`
	// Số lượng user theo dõi tag
	NumberOfFollower int32 `protobuf:"varint,3,opt,name=number_of_follower,json=numberOfFollower,proto3" json:"number_of_follower,omitempty"`
	// Phân trang
	Data *Pagination `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *GetTagsResponse) Reset()                    { *m = GetTagsResponse{} }
func (*GetTagsResponse) ProtoMessage()               {}
func (*GetTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{3} }

func (m *GetTagsResponse) GetTag() []*Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *GetTagsResponse) GetNumberOfPost() int32 {
	if m != nil {
		return m.NumberOfPost
	}
	return 0
}

func (m *GetTagsResponse) GetNumberOfFollower() int32 {
	if m != nil {
		return m.NumberOfFollower
	}
	return 0
}

func (m *GetTagsResponse) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetPopularTagsRequest struct {
	// Lấy danh sách Tag thông dụng
	NumberOfTag int32 `protobuf:"varint,1,opt,name=number_of_tag,json=numberOfTag,proto3" json:"number_of_tag,omitempty"`
}

func (m *GetPopularTagsRequest) Reset()                    { *m = GetPopularTagsRequest{} }
func (*GetPopularTagsRequest) ProtoMessage()               {}
func (*GetPopularTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{4} }

func (m *GetPopularTagsRequest) GetNumberOfTag() int32 {
	if m != nil {
		return m.NumberOfTag
	}
	return 0
}

type GetPopularTagsResponse struct {
	// Trả về danh sách tag thông dụng
	Tag []*Tag `protobuf:"bytes,1,rep,name=tag" json:"tag,omitempty"`
	// Số lượng post có gắn tag
	NumberOfPost int32 `protobuf:"varint,2,opt,name=number_of_post,json=numberOfPost,proto3" json:"number_of_post,omitempty"`
	// Số lượng user theo dõi tag
	NumberOfFollower int32 `protobuf:"varint,3,opt,name=number_of_follower,json=numberOfFollower,proto3" json:"number_of_follower,omitempty"`
	// Phân trang
	Data *Pagination `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *GetPopularTagsResponse) Reset()                    { *m = GetPopularTagsResponse{} }
func (*GetPopularTagsResponse) ProtoMessage()               {}
func (*GetPopularTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{5} }

func (m *GetPopularTagsResponse) GetTag() []*Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *GetPopularTagsResponse) GetNumberOfPost() int32 {
	if m != nil {
		return m.NumberOfPost
	}
	return 0
}

func (m *GetPopularTagsResponse) GetNumberOfFollower() int32 {
	if m != nil {
		return m.NumberOfFollower
	}
	return 0
}

func (m *GetPopularTagsResponse) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetPublishedPostsByTagRequest struct {
	// Id của tag
	TagId string `protobuf:"bytes,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	// Danh sách bài viết chế độ publish có gắn tag
	Post []*Post `protobuf:"bytes,2,rep,name=post" json:"post,omitempty"`
	// Phân trang
	Data *Pagination `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *GetPublishedPostsByTagRequest) Reset()      { *m = GetPublishedPostsByTagRequest{} }
func (*GetPublishedPostsByTagRequest) ProtoMessage() {}
func (*GetPublishedPostsByTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorBlogTag, []int{6}
}

func (m *GetPublishedPostsByTagRequest) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

func (m *GetPublishedPostsByTagRequest) GetPost() []*Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *GetPublishedPostsByTagRequest) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type SearchTagsRequest struct {
	// Từ khóa tìm kiếm
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// Phân trang
	Data *Pagination `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *SearchTagsRequest) Reset()                    { *m = SearchTagsRequest{} }
func (*SearchTagsRequest) ProtoMessage()               {}
func (*SearchTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{7} }

func (m *SearchTagsRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *SearchTagsRequest) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type SearchTagsResponse struct {
	// Trả về danh sách tag tìm kiếm
	Tag []*Tag `protobuf:"bytes,1,rep,name=tag" json:"tag,omitempty"`
}

func (m *SearchTagsResponse) Reset()                    { *m = SearchTagsResponse{} }
func (*SearchTagsResponse) ProtoMessage()               {}
func (*SearchTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{8} }

func (m *SearchTagsResponse) GetTag() []*Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type FollowTagRequest struct {
	// Id tag
	TagId string `protobuf:"bytes,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
}

func (m *FollowTagRequest) Reset()                    { *m = FollowTagRequest{} }
func (*FollowTagRequest) ProtoMessage()               {}
func (*FollowTagRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{9} }

func (m *FollowTagRequest) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

type UnFollowTagRequest struct {
	// Id tag
	TagId string `protobuf:"bytes,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
}

func (m *UnFollowTagRequest) Reset()                    { *m = UnFollowTagRequest{} }
func (*UnFollowTagRequest) ProtoMessage()               {}
func (*UnFollowTagRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{10} }

func (m *UnFollowTagRequest) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

type GetFollowingTagsResponse struct {
	// Trả về danh sách tag đang theo dõi
	Tag []*Tag `protobuf:"bytes,1,rep,name=tag" json:"tag,omitempty"`
}

func (m *GetFollowingTagsResponse) Reset()                    { *m = GetFollowingTagsResponse{} }
func (*GetFollowingTagsResponse) ProtoMessage()               {}
func (*GetFollowingTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogTag, []int{11} }

func (m *GetFollowingTagsResponse) GetTag() []*Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateTagRequest)(nil), "blog.CreateTagRequest")
	proto.RegisterType((*CreateTagResponse)(nil), "blog.CreateTagResponse")
	proto.RegisterType((*GetTagsRequest)(nil), "blog.GetTagsRequest")
	proto.RegisterType((*GetTagsResponse)(nil), "blog.GetTagsResponse")
	proto.RegisterType((*GetPopularTagsRequest)(nil), "blog.GetPopularTagsRequest")
	proto.RegisterType((*GetPopularTagsResponse)(nil), "blog.GetPopularTagsResponse")
	proto.RegisterType((*GetPublishedPostsByTagRequest)(nil), "blog.GetPublishedPostsByTagRequest")
	proto.RegisterType((*SearchTagsRequest)(nil), "blog.SearchTagsRequest")
	proto.RegisterType((*SearchTagsResponse)(nil), "blog.SearchTagsResponse")
	proto.RegisterType((*FollowTagRequest)(nil), "blog.FollowTagRequest")
	proto.RegisterType((*UnFollowTagRequest)(nil), "blog.UnFollowTagRequest")
	proto.RegisterType((*GetFollowingTagsResponse)(nil), "blog.GetFollowingTagsResponse")
}
func (this *CreateTagRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateTagRequest)
	if !ok {
		that2, ok := that.(CreateTagRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Tag.Equal(that1.Tag) {
		return false
	}
	return true
}
func (this *CreateTagResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateTagResponse)
	if !ok {
		that2, ok := that.(CreateTagResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Tag.Equal(that1.Tag) {
		return false
	}
	return true
}
func (this *GetTagsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetTagsRequest)
	if !ok {
		that2, ok := that.(GetTagsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *GetTagsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetTagsResponse)
	if !ok {
		that2, ok := that.(GetTagsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Tag) != len(that1.Tag) {
		return false
	}
	for i := range this.Tag {
		if !this.Tag[i].Equal(that1.Tag[i]) {
			return false
		}
	}
	if this.NumberOfPost != that1.NumberOfPost {
		return false
	}
	if this.NumberOfFollower != that1.NumberOfFollower {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *GetPopularTagsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetPopularTagsRequest)
	if !ok {
		that2, ok := that.(GetPopularTagsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NumberOfTag != that1.NumberOfTag {
		return false
	}
	return true
}
func (this *GetPopularTagsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetPopularTagsResponse)
	if !ok {
		that2, ok := that.(GetPopularTagsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Tag) != len(that1.Tag) {
		return false
	}
	for i := range this.Tag {
		if !this.Tag[i].Equal(that1.Tag[i]) {
			return false
		}
	}
	if this.NumberOfPost != that1.NumberOfPost {
		return false
	}
	if this.NumberOfFollower != that1.NumberOfFollower {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *GetPublishedPostsByTagRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetPublishedPostsByTagRequest)
	if !ok {
		that2, ok := that.(GetPublishedPostsByTagRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.TagId != that1.TagId {
		return false
	}
	if len(this.Post) != len(that1.Post) {
		return false
	}
	for i := range this.Post {
		if !this.Post[i].Equal(that1.Post[i]) {
			return false
		}
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *SearchTagsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SearchTagsRequest)
	if !ok {
		that2, ok := that.(SearchTagsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Keyword != that1.Keyword {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *SearchTagsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SearchTagsResponse)
	if !ok {
		that2, ok := that.(SearchTagsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Tag) != len(that1.Tag) {
		return false
	}
	for i := range this.Tag {
		if !this.Tag[i].Equal(that1.Tag[i]) {
			return false
		}
	}
	return true
}
func (this *FollowTagRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*FollowTagRequest)
	if !ok {
		that2, ok := that.(FollowTagRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.TagId != that1.TagId {
		return false
	}
	return true
}
func (this *UnFollowTagRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UnFollowTagRequest)
	if !ok {
		that2, ok := that.(UnFollowTagRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.TagId != that1.TagId {
		return false
	}
	return true
}
func (this *GetFollowingTagsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetFollowingTagsResponse)
	if !ok {
		that2, ok := that.(GetFollowingTagsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Tag) != len(that1.Tag) {
		return false
	}
	for i := range this.Tag {
		if !this.Tag[i].Equal(that1.Tag[i]) {
			return false
		}
	}
	return true
}
func (this *CreateTagRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.CreateTagRequest{")
	if this.Tag != nil {
		s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateTagResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.CreateTagResponse{")
	if this.Tag != nil {
		s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetTagsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.GetTagsRequest{")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetTagsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&blog.GetTagsResponse{")
	if this.Tag != nil {
		s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	}
	s = append(s, "NumberOfPost: "+fmt.Sprintf("%#v", this.NumberOfPost)+",\n")
	s = append(s, "NumberOfFollower: "+fmt.Sprintf("%#v", this.NumberOfFollower)+",\n")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetPopularTagsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.GetPopularTagsRequest{")
	s = append(s, "NumberOfTag: "+fmt.Sprintf("%#v", this.NumberOfTag)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetPopularTagsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&blog.GetPopularTagsResponse{")
	if this.Tag != nil {
		s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	}
	s = append(s, "NumberOfPost: "+fmt.Sprintf("%#v", this.NumberOfPost)+",\n")
	s = append(s, "NumberOfFollower: "+fmt.Sprintf("%#v", this.NumberOfFollower)+",\n")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetPublishedPostsByTagRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&blog.GetPublishedPostsByTagRequest{")
	s = append(s, "TagId: "+fmt.Sprintf("%#v", this.TagId)+",\n")
	if this.Post != nil {
		s = append(s, "Post: "+fmt.Sprintf("%#v", this.Post)+",\n")
	}
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SearchTagsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&blog.SearchTagsRequest{")
	s = append(s, "Keyword: "+fmt.Sprintf("%#v", this.Keyword)+",\n")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SearchTagsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.SearchTagsResponse{")
	if this.Tag != nil {
		s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *FollowTagRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.FollowTagRequest{")
	s = append(s, "TagId: "+fmt.Sprintf("%#v", this.TagId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UnFollowTagRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.UnFollowTagRequest{")
	s = append(s, "TagId: "+fmt.Sprintf("%#v", this.TagId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetFollowingTagsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.GetFollowingTagsResponse{")
	if this.Tag != nil {
		s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringBlogTag(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *CreateTagRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateTagRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Tag != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.Tag.Size()))
		n1, err := m.Tag.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func (m *CreateTagResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateTagResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Tag != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.Tag.Size()))
		n2, err := m.Tag.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}

func (m *GetTagsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTagsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.Data.Size()))
		n3, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}

func (m *GetTagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTagsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tag) > 0 {
		for _, msg := range m.Tag {
			dAtA[i] = 0xa
			i++
			i = encodeVarintBlogTag(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.NumberOfPost != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.NumberOfPost))
	}
	if m.NumberOfFollower != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.NumberOfFollower))
	}
	if m.Data != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.Data.Size()))
		n4, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}

func (m *GetPopularTagsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPopularTagsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.NumberOfTag != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.NumberOfTag))
	}
	return i, nil
}

func (m *GetPopularTagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPopularTagsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tag) > 0 {
		for _, msg := range m.Tag {
			dAtA[i] = 0xa
			i++
			i = encodeVarintBlogTag(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.NumberOfPost != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.NumberOfPost))
	}
	if m.NumberOfFollower != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.NumberOfFollower))
	}
	if m.Data != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.Data.Size()))
		n5, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}

func (m *GetPublishedPostsByTagRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPublishedPostsByTagRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.TagId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(len(m.TagId)))
		i += copy(dAtA[i:], m.TagId)
	}
	if len(m.Post) > 0 {
		for _, msg := range m.Post {
			dAtA[i] = 0x12
			i++
			i = encodeVarintBlogTag(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Data != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.Data.Size()))
		n6, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}

func (m *SearchTagsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchTagsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Keyword) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(len(m.Keyword)))
		i += copy(dAtA[i:], m.Keyword)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(m.Data.Size()))
		n7, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}

func (m *SearchTagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchTagsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tag) > 0 {
		for _, msg := range m.Tag {
			dAtA[i] = 0xa
			i++
			i = encodeVarintBlogTag(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *FollowTagRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FollowTagRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.TagId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(len(m.TagId)))
		i += copy(dAtA[i:], m.TagId)
	}
	return i, nil
}

func (m *UnFollowTagRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnFollowTagRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.TagId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogTag(dAtA, i, uint64(len(m.TagId)))
		i += copy(dAtA[i:], m.TagId)
	}
	return i, nil
}

func (m *GetFollowingTagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFollowingTagsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tag) > 0 {
		for _, msg := range m.Tag {
			dAtA[i] = 0xa
			i++
			i = encodeVarintBlogTag(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeVarintBlogTag(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *CreateTagRequest) Size() (n int) {
	var l int
	_ = l
	if m.Tag != nil {
		l = m.Tag.Size()
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *CreateTagResponse) Size() (n int) {
	var l int
	_ = l
	if m.Tag != nil {
		l = m.Tag.Size()
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *GetTagsRequest) Size() (n int) {
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *GetTagsResponse) Size() (n int) {
	var l int
	_ = l
	if len(m.Tag) > 0 {
		for _, e := range m.Tag {
			l = e.Size()
			n += 1 + l + sovBlogTag(uint64(l))
		}
	}
	if m.NumberOfPost != 0 {
		n += 1 + sovBlogTag(uint64(m.NumberOfPost))
	}
	if m.NumberOfFollower != 0 {
		n += 1 + sovBlogTag(uint64(m.NumberOfFollower))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *GetPopularTagsRequest) Size() (n int) {
	var l int
	_ = l
	if m.NumberOfTag != 0 {
		n += 1 + sovBlogTag(uint64(m.NumberOfTag))
	}
	return n
}

func (m *GetPopularTagsResponse) Size() (n int) {
	var l int
	_ = l
	if len(m.Tag) > 0 {
		for _, e := range m.Tag {
			l = e.Size()
			n += 1 + l + sovBlogTag(uint64(l))
		}
	}
	if m.NumberOfPost != 0 {
		n += 1 + sovBlogTag(uint64(m.NumberOfPost))
	}
	if m.NumberOfFollower != 0 {
		n += 1 + sovBlogTag(uint64(m.NumberOfFollower))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *GetPublishedPostsByTagRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.TagId)
	if l > 0 {
		n += 1 + l + sovBlogTag(uint64(l))
	}
	if len(m.Post) > 0 {
		for _, e := range m.Post {
			l = e.Size()
			n += 1 + l + sovBlogTag(uint64(l))
		}
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *SearchTagsRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovBlogTag(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *SearchTagsResponse) Size() (n int) {
	var l int
	_ = l
	if len(m.Tag) > 0 {
		for _, e := range m.Tag {
			l = e.Size()
			n += 1 + l + sovBlogTag(uint64(l))
		}
	}
	return n
}

func (m *FollowTagRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.TagId)
	if l > 0 {
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *UnFollowTagRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.TagId)
	if l > 0 {
		n += 1 + l + sovBlogTag(uint64(l))
	}
	return n
}

func (m *GetFollowingTagsResponse) Size() (n int) {
	var l int
	_ = l
	if len(m.Tag) > 0 {
		for _, e := range m.Tag {
			l = e.Size()
			n += 1 + l + sovBlogTag(uint64(l))
		}
	}
	return n
}

func sovBlogTag(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozBlogTag(x uint64) (n int) {
	return sovBlogTag(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *CreateTagRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateTagRequest{`,
		`Tag:` + strings.Replace(fmt.Sprintf("%v", this.Tag), "Tag", "Tag", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateTagResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateTagResponse{`,
		`Tag:` + strings.Replace(fmt.Sprintf("%v", this.Tag), "Tag", "Tag", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetTagsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetTagsRequest{`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetTagsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetTagsResponse{`,
		`Tag:` + strings.Replace(fmt.Sprintf("%v", this.Tag), "Tag", "Tag", 1) + `,`,
		`NumberOfPost:` + fmt.Sprintf("%v", this.NumberOfPost) + `,`,
		`NumberOfFollower:` + fmt.Sprintf("%v", this.NumberOfFollower) + `,`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetPopularTagsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetPopularTagsRequest{`,
		`NumberOfTag:` + fmt.Sprintf("%v", this.NumberOfTag) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetPopularTagsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetPopularTagsResponse{`,
		`Tag:` + strings.Replace(fmt.Sprintf("%v", this.Tag), "Tag", "Tag", 1) + `,`,
		`NumberOfPost:` + fmt.Sprintf("%v", this.NumberOfPost) + `,`,
		`NumberOfFollower:` + fmt.Sprintf("%v", this.NumberOfFollower) + `,`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetPublishedPostsByTagRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetPublishedPostsByTagRequest{`,
		`TagId:` + fmt.Sprintf("%v", this.TagId) + `,`,
		`Post:` + strings.Replace(fmt.Sprintf("%v", this.Post), "Post", "Post", 1) + `,`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SearchTagsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SearchTagsRequest{`,
		`Keyword:` + fmt.Sprintf("%v", this.Keyword) + `,`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SearchTagsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SearchTagsResponse{`,
		`Tag:` + strings.Replace(fmt.Sprintf("%v", this.Tag), "Tag", "Tag", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *FollowTagRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&FollowTagRequest{`,
		`TagId:` + fmt.Sprintf("%v", this.TagId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UnFollowTagRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UnFollowTagRequest{`,
		`TagId:` + fmt.Sprintf("%v", this.TagId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetFollowingTagsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetFollowingTagsResponse{`,
		`Tag:` + strings.Replace(fmt.Sprintf("%v", this.Tag), "Tag", "Tag", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringBlogTag(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *CreateTagRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateTagRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateTagRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tag == nil {
				m.Tag = &Tag{}
			}
			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateTagResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateTagResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateTagResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tag == nil {
				m.Tag = &Tag{}
			}
			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTagsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTagsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTagsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = append(m.Tag, &Tag{})
			if err := m.Tag[len(m.Tag)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberOfPost", wireType)
			}
			m.NumberOfPost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumberOfPost |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberOfFollower", wireType)
			}
			m.NumberOfFollower = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumberOfFollower |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPopularTagsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPopularTagsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPopularTagsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberOfTag", wireType)
			}
			m.NumberOfTag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumberOfTag |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPopularTagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPopularTagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPopularTagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = append(m.Tag, &Tag{})
			if err := m.Tag[len(m.Tag)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberOfPost", wireType)
			}
			m.NumberOfPost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumberOfPost |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberOfFollower", wireType)
			}
			m.NumberOfFollower = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumberOfFollower |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPublishedPostsByTagRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPublishedPostsByTagRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPublishedPostsByTagRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Post = append(m.Post, &Post{})
			if err := m.Post[len(m.Post)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchTagsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchTagsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchTagsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchTagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchTagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchTagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = append(m.Tag, &Tag{})
			if err := m.Tag[len(m.Tag)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FollowTagRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FollowTagRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FollowTagRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnFollowTagRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnFollowTagRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnFollowTagRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFollowingTagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFollowingTagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFollowingTagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogTag
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = append(m.Tag, &Tag{})
			if err := m.Tag[len(m.Tag)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBlogTag(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBlogTag
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBlogTag
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthBlogTag
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowBlogTag
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipBlogTag(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthBlogTag = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBlogTag   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("blog_tag.proto", fileDescriptorBlogTag) }

var fileDescriptorBlogTag = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0xbd, 0x8e, 0xd3, 0x40,
	0x18, 0xf4, 0x9e, 0x9d, 0x43, 0xf7, 0x1d, 0x04, 0xdf, 0x4a, 0x87, 0x2c, 0x10, 0xab, 0x93, 0x75,
	0xc5, 0x21, 0x4e, 0xe1, 0x4f, 0x82, 0x82, 0x2e, 0x48, 0x44, 0x54, 0x44, 0x4e, 0xa8, 0xad, 0x35,
	0xde, 0x6c, 0x2c, 0x8c, 0xd7, 0x78, 0xd7, 0x8a, 0x22, 0x51, 0xf0, 0x08, 0x3c, 0x46, 0x3a, 0x5e,
	0x83, 0x32, 0x25, 0x25, 0x31, 0x0d, 0x65, 0x1e, 0x01, 0xf9, 0x37, 0x56, 0x90, 0x4c, 0x4a, 0xca,
	0x9d, 0x6f, 0xe6, 0x9b, 0x99, 0x4f, 0x96, 0xa1, 0xef, 0x85, 0x82, 0xbb, 0x8a, 0xf2, 0x41, 0x9c,
	0x08, 0x25, 0xb0, 0x91, 0xbf, 0xef, 0x82, 0x47, 0x25, 0x2b, 0x11, 0xfb, 0x11, 0x98, 0xaf, 0x12,
	0x46, 0x15, 0x9b, 0x52, 0xee, 0xb0, 0x4f, 0x29, 0x93, 0x0a, 0xdf, 0x03, 0x5d, 0x51, 0x6e, 0xa1,
	0x0b, 0x74, 0x75, 0xfa, 0xf4, 0x64, 0x90, 0x6b, 0x06, 0xf9, 0x38, 0x47, 0xed, 0xc7, 0x70, 0xd6,
	0x12, 0xc8, 0x58, 0x44, 0x92, 0x75, 0x2b, 0x9e, 0x43, 0x7f, 0xc4, 0xd4, 0x94, 0x72, 0x59, 0x1b,
	0x5c, 0x82, 0xe1, 0x53, 0x45, 0x2b, 0xbe, 0x59, 0xf2, 0xc7, 0x94, 0x07, 0x11, 0x55, 0x81, 0x88,
	0x9c, 0x62, 0x6a, 0xaf, 0x10, 0xdc, 0x6e, 0x84, 0xfb, 0x46, 0xfa, 0xdf, 0x46, 0xf8, 0x12, 0xfa,
	0x51, 0xfa, 0xd1, 0x63, 0x89, 0x2b, 0x66, 0x6e, 0x2c, 0xa4, 0xb2, 0x8e, 0x2e, 0xd0, 0x55, 0xcf,
	0xb9, 0x59, 0xa2, 0x6f, 0x67, 0x63, 0x21, 0x15, 0xbe, 0x06, 0xbc, 0x63, 0xcd, 0x44, 0x18, 0x8a,
	0x05, 0x4b, 0x2c, 0xbd, 0x60, 0x9a, 0x35, 0xf3, 0x75, 0x85, 0x37, 0x51, 0x8d, 0xce, 0xa8, 0x2f,
	0xe1, 0x7c, 0xc4, 0xd4, 0x58, 0xc4, 0x69, 0x48, 0x93, 0x76, 0x53, 0x1b, 0x6e, 0xed, 0xcc, 0xea,
	0x13, 0xf5, 0x9c, 0xd3, 0xda, 0x67, 0x4a, 0xb9, 0xfd, 0x0d, 0xc1, 0x9d, 0x7d, 0xf5, 0xff, 0x5d,
	0xf7, 0x33, 0xdc, 0xcf, 0x03, 0xa7, 0x5e, 0x18, 0xc8, 0x39, 0xf3, 0x73, 0x1f, 0x39, 0x5c, 0xb6,
	0xbe, 0xa0, 0x73, 0x38, 0x56, 0x94, 0xbb, 0x81, 0x5f, 0xf4, 0x3d, 0x71, 0x7a, 0x8a, 0xf2, 0x37,
	0x3e, 0x26, 0x60, 0x54, 0x39, 0xf3, 0x3e, 0x50, 0x6d, 0x17, 0x52, 0x39, 0x05, 0xde, 0xb8, 0xeb,
	0x9d, 0xee, 0x13, 0x38, 0x9b, 0x30, 0x9a, 0xbc, 0x9f, 0xb7, 0x0f, 0x6d, 0xc1, 0x8d, 0x0f, 0x6c,
	0xb9, 0x10, 0x49, 0x6d, 0x59, 0x3f, 0x9b, 0xa5, 0x47, 0x9d, 0x4b, 0x9f, 0x00, 0x6e, 0x2f, 0x3d,
	0xe0, 0xfe, 0xf6, 0x03, 0x30, 0xcb, 0xbb, 0xfd, 0xb3, 0xb8, 0xfd, 0x10, 0xf0, 0xbb, 0xe8, 0x50,
	0xf2, 0x0b, 0xb0, 0x46, 0x4c, 0x95, 0xec, 0x20, 0xe2, 0x07, 0x07, 0x1a, 0x5e, 0xaf, 0x37, 0x44,
	0xfb, 0xb1, 0x21, 0xda, 0x76, 0x43, 0xd0, 0x97, 0x8c, 0xa0, 0x55, 0x46, 0xd0, 0xf7, 0x8c, 0xa0,
	0x75, 0x46, 0xd0, 0xcf, 0x8c, 0xa0, 0xdf, 0x19, 0xd1, 0xb6, 0x19, 0x41, 0x5f, 0x7f, 0x11, 0xcd,
	0x3b, 0x2e, 0x7e, 0x00, 0xcf, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xbd, 0x0b, 0x89, 0x24,
	0x04, 0x00, 0x00,
}
