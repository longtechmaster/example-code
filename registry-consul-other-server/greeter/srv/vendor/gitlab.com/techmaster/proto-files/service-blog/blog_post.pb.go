// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: blog_post.proto

package blog

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreatePostRequest struct {
	// Tạo bài viết - Dữ liệu truyền vào:
	Post *Post `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
}

func (m *CreatePostRequest) Reset()                    { *m = CreatePostRequest{} }
func (*CreatePostRequest) ProtoMessage()               {}
func (*CreatePostRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{0} }

func (m *CreatePostRequest) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type CreatePostResponse struct {
	// Trả về bài viết vừa tạo
	Post *Post `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
}

func (m *CreatePostResponse) Reset()                    { *m = CreatePostResponse{} }
func (*CreatePostResponse) ProtoMessage()               {}
func (*CreatePostResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{1} }

func (m *CreatePostResponse) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type GetPostByIdRequest struct {
	// Id bài viết
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (m *GetPostByIdRequest) Reset()                    { *m = GetPostByIdRequest{} }
func (*GetPostByIdRequest) ProtoMessage()               {}
func (*GetPostByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{2} }

func (m *GetPostByIdRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

type GetPostByIdResponse struct {
	// Trả về bài viết
	Post *Post `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
}

func (m *GetPostByIdResponse) Reset()                    { *m = GetPostByIdResponse{} }
func (*GetPostByIdResponse) ProtoMessage()               {}
func (*GetPostByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{3} }

func (m *GetPostByIdResponse) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type GetPostsRequest struct {
	// Phân trang
	Data *Pagination `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *GetPostsRequest) Reset()                    { *m = GetPostsRequest{} }
func (*GetPostsRequest) ProtoMessage()               {}
func (*GetPostsRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{4} }

func (m *GetPostsRequest) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetOwnPostsRequest struct {
	// Phân trang
	Data *Pagination `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *GetOwnPostsRequest) Reset()                    { *m = GetOwnPostsRequest{} }
func (*GetOwnPostsRequest) ProtoMessage()               {}
func (*GetOwnPostsRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{5} }

func (m *GetOwnPostsRequest) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetPublishedPostsResquest struct {
	// Phân trang
	Data *Pagination `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *GetPublishedPostsResquest) Reset()      { *m = GetPublishedPostsResquest{} }
func (*GetPublishedPostsResquest) ProtoMessage() {}
func (*GetPublishedPostsResquest) Descriptor() ([]byte, []int) {
	return fileDescriptorBlogPost, []int{6}
}

func (m *GetPublishedPostsResquest) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetRelatedPostsRequest struct {
	// Id danh sách bài viết muốn lấy danh sách liên quan
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// Phân trang
	Data *Pagination `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *GetRelatedPostsRequest) Reset()                    { *m = GetRelatedPostsRequest{} }
func (*GetRelatedPostsRequest) ProtoMessage()               {}
func (*GetRelatedPostsRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{7} }

func (m *GetRelatedPostsRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

func (m *GetRelatedPostsRequest) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListPostsResponse struct {
	// Trả về danh sách bài viết
	Post []*Post `protobuf:"bytes,1,rep,name=post" json:"post,omitempty"`
}

func (m *ListPostsResponse) Reset()                    { *m = ListPostsResponse{} }
func (*ListPostsResponse) ProtoMessage()               {}
func (*ListPostsResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{8} }

func (m *ListPostsResponse) GetPost() []*Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type UpdatePostRequest struct {
	// Cập nhật bài viết
	Post *Post `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
}

func (m *UpdatePostRequest) Reset()                    { *m = UpdatePostRequest{} }
func (*UpdatePostRequest) ProtoMessage()               {}
func (*UpdatePostRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{9} }

func (m *UpdatePostRequest) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type UpdatePostResponse struct {
	// Trả về bài viết vừa cập nhật
	Post *Post `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
}

func (m *UpdatePostResponse) Reset()                    { *m = UpdatePostResponse{} }
func (*UpdatePostResponse) ProtoMessage()               {}
func (*UpdatePostResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{10} }

func (m *UpdatePostResponse) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type DeletePostRequest struct {
	// Id bài viết muốn xóa
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (m *DeletePostRequest) Reset()                    { *m = DeletePostRequest{} }
func (*DeletePostRequest) ProtoMessage()               {}
func (*DeletePostRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{11} }

func (m *DeletePostRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

type PublishPostRequest struct {
	// Id bài viết muốn thay đổi trạng thái
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// Trạng thái muốn thay đổi
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *PublishPostRequest) Reset()                    { *m = PublishPostRequest{} }
func (*PublishPostRequest) ProtoMessage()               {}
func (*PublishPostRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{12} }

func (m *PublishPostRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

func (m *PublishPostRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type SearchPostsRequest struct {
	// Từ khóa tìm kiếm
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// Phân trang
	Data *Pagination `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *SearchPostsRequest) Reset()                    { *m = SearchPostsRequest{} }
func (*SearchPostsRequest) ProtoMessage()               {}
func (*SearchPostsRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{13} }

func (m *SearchPostsRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *SearchPostsRequest) GetData() *Pagination {
	if m != nil {
		return m.Data
	}
	return nil
}

type VoteUpPostRequest struct {
	// Vote Up bài viết
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (m *VoteUpPostRequest) Reset()                    { *m = VoteUpPostRequest{} }
func (*VoteUpPostRequest) ProtoMessage()               {}
func (*VoteUpPostRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{14} }

func (m *VoteUpPostRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

type VoteDownPostRequest struct {
	// Vote down bài viết
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (m *VoteDownPostRequest) Reset()                    { *m = VoteDownPostRequest{} }
func (*VoteDownPostRequest) ProtoMessage()               {}
func (*VoteDownPostRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{15} }

func (m *VoteDownPostRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

type BookmarkRequest struct {
	// Bookmark bài viết
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (m *BookmarkRequest) Reset()                    { *m = BookmarkRequest{} }
func (*BookmarkRequest) ProtoMessage()               {}
func (*BookmarkRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlogPost, []int{16} }

func (m *BookmarkRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

func init() {
	proto.RegisterType((*CreatePostRequest)(nil), "blog.CreatePostRequest")
	proto.RegisterType((*CreatePostResponse)(nil), "blog.CreatePostResponse")
	proto.RegisterType((*GetPostByIdRequest)(nil), "blog.GetPostByIdRequest")
	proto.RegisterType((*GetPostByIdResponse)(nil), "blog.GetPostByIdResponse")
	proto.RegisterType((*GetPostsRequest)(nil), "blog.GetPostsRequest")
	proto.RegisterType((*GetOwnPostsRequest)(nil), "blog.GetOwnPostsRequest")
	proto.RegisterType((*GetPublishedPostsResquest)(nil), "blog.GetPublishedPostsResquest")
	proto.RegisterType((*GetRelatedPostsRequest)(nil), "blog.GetRelatedPostsRequest")
	proto.RegisterType((*ListPostsResponse)(nil), "blog.ListPostsResponse")
	proto.RegisterType((*UpdatePostRequest)(nil), "blog.UpdatePostRequest")
	proto.RegisterType((*UpdatePostResponse)(nil), "blog.UpdatePostResponse")
	proto.RegisterType((*DeletePostRequest)(nil), "blog.DeletePostRequest")
	proto.RegisterType((*PublishPostRequest)(nil), "blog.PublishPostRequest")
	proto.RegisterType((*SearchPostsRequest)(nil), "blog.SearchPostsRequest")
	proto.RegisterType((*VoteUpPostRequest)(nil), "blog.VoteUpPostRequest")
	proto.RegisterType((*VoteDownPostRequest)(nil), "blog.VoteDownPostRequest")
	proto.RegisterType((*BookmarkRequest)(nil), "blog.BookmarkRequest")
}
func (this *CreatePostRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreatePostRequest)
	if !ok {
		that2, ok := that.(CreatePostRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Post.Equal(that1.Post) {
		return false
	}
	return true
}
func (this *CreatePostResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreatePostResponse)
	if !ok {
		that2, ok := that.(CreatePostResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Post.Equal(that1.Post) {
		return false
	}
	return true
}
func (this *GetPostByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetPostByIdRequest)
	if !ok {
		that2, ok := that.(GetPostByIdRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PostId != that1.PostId {
		return false
	}
	return true
}
func (this *GetPostByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetPostByIdResponse)
	if !ok {
		that2, ok := that.(GetPostByIdResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Post.Equal(that1.Post) {
		return false
	}
	return true
}
func (this *GetPostsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetPostsRequest)
	if !ok {
		that2, ok := that.(GetPostsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *GetOwnPostsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetOwnPostsRequest)
	if !ok {
		that2, ok := that.(GetOwnPostsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *GetPublishedPostsResquest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetPublishedPostsResquest)
	if !ok {
		that2, ok := that.(GetPublishedPostsResquest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *GetRelatedPostsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetRelatedPostsRequest)
	if !ok {
		that2, ok := that.(GetRelatedPostsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PostId != that1.PostId {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *ListPostsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListPostsResponse)
	if !ok {
		that2, ok := that.(ListPostsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Post) != len(that1.Post) {
		return false
	}
	for i := range this.Post {
		if !this.Post[i].Equal(that1.Post[i]) {
			return false
		}
	}
	return true
}
func (this *UpdatePostRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdatePostRequest)
	if !ok {
		that2, ok := that.(UpdatePostRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Post.Equal(that1.Post) {
		return false
	}
	return true
}
func (this *UpdatePostResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdatePostResponse)
	if !ok {
		that2, ok := that.(UpdatePostResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Post.Equal(that1.Post) {
		return false
	}
	return true
}
func (this *DeletePostRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeletePostRequest)
	if !ok {
		that2, ok := that.(DeletePostRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PostId != that1.PostId {
		return false
	}
	return true
}
func (this *PublishPostRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PublishPostRequest)
	if !ok {
		that2, ok := that.(PublishPostRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PostId != that1.PostId {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	return true
}
func (this *SearchPostsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SearchPostsRequest)
	if !ok {
		that2, ok := that.(SearchPostsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Keyword != that1.Keyword {
		return false
	}
	if !this.Data.Equal(that1.Data) {
		return false
	}
	return true
}
func (this *VoteUpPostRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VoteUpPostRequest)
	if !ok {
		that2, ok := that.(VoteUpPostRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PostId != that1.PostId {
		return false
	}
	return true
}
func (this *VoteDownPostRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VoteDownPostRequest)
	if !ok {
		that2, ok := that.(VoteDownPostRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PostId != that1.PostId {
		return false
	}
	return true
}
func (this *BookmarkRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BookmarkRequest)
	if !ok {
		that2, ok := that.(BookmarkRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PostId != that1.PostId {
		return false
	}
	return true
}
func (this *CreatePostRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.CreatePostRequest{")
	if this.Post != nil {
		s = append(s, "Post: "+fmt.Sprintf("%#v", this.Post)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreatePostResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.CreatePostResponse{")
	if this.Post != nil {
		s = append(s, "Post: "+fmt.Sprintf("%#v", this.Post)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetPostByIdRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.GetPostByIdRequest{")
	s = append(s, "PostId: "+fmt.Sprintf("%#v", this.PostId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetPostByIdResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.GetPostByIdResponse{")
	if this.Post != nil {
		s = append(s, "Post: "+fmt.Sprintf("%#v", this.Post)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetPostsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.GetPostsRequest{")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetOwnPostsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.GetOwnPostsRequest{")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetPublishedPostsResquest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.GetPublishedPostsResquest{")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetRelatedPostsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&blog.GetRelatedPostsRequest{")
	s = append(s, "PostId: "+fmt.Sprintf("%#v", this.PostId)+",\n")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListPostsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.ListPostsResponse{")
	if this.Post != nil {
		s = append(s, "Post: "+fmt.Sprintf("%#v", this.Post)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdatePostRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.UpdatePostRequest{")
	if this.Post != nil {
		s = append(s, "Post: "+fmt.Sprintf("%#v", this.Post)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdatePostResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.UpdatePostResponse{")
	if this.Post != nil {
		s = append(s, "Post: "+fmt.Sprintf("%#v", this.Post)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeletePostRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.DeletePostRequest{")
	s = append(s, "PostId: "+fmt.Sprintf("%#v", this.PostId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PublishPostRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&blog.PublishPostRequest{")
	s = append(s, "PostId: "+fmt.Sprintf("%#v", this.PostId)+",\n")
	s = append(s, "Status: "+fmt.Sprintf("%#v", this.Status)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SearchPostsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&blog.SearchPostsRequest{")
	s = append(s, "Keyword: "+fmt.Sprintf("%#v", this.Keyword)+",\n")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *VoteUpPostRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.VoteUpPostRequest{")
	s = append(s, "PostId: "+fmt.Sprintf("%#v", this.PostId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *VoteDownPostRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.VoteDownPostRequest{")
	s = append(s, "PostId: "+fmt.Sprintf("%#v", this.PostId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *BookmarkRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&blog.BookmarkRequest{")
	s = append(s, "PostId: "+fmt.Sprintf("%#v", this.PostId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringBlogPost(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *CreatePostRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreatePostRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Post != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Post.Size()))
		n1, err := m.Post.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func (m *CreatePostResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreatePostResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Post != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Post.Size()))
		n2, err := m.Post.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}

func (m *GetPostByIdRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPostByIdRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	return i, nil
}

func (m *GetPostByIdResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPostByIdResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Post != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Post.Size()))
		n3, err := m.Post.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}

func (m *GetPostsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPostsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Data.Size()))
		n4, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}

func (m *GetOwnPostsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetOwnPostsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Data.Size()))
		n5, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}

func (m *GetPublishedPostsResquest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPublishedPostsResquest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Data.Size()))
		n6, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}

func (m *GetRelatedPostsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRelatedPostsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Data.Size()))
		n7, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}

func (m *ListPostsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListPostsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Post) > 0 {
		for _, msg := range m.Post {
			dAtA[i] = 0xa
			i++
			i = encodeVarintBlogPost(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *UpdatePostRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePostRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Post != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Post.Size()))
		n8, err := m.Post.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}

func (m *UpdatePostResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePostResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Post != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Post.Size()))
		n9, err := m.Post.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}

func (m *DeletePostRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeletePostRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	return i, nil
}

func (m *PublishPostRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PublishPostRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	if m.Status != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Status))
	}
	return i, nil
}

func (m *SearchPostsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchPostsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Keyword) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(len(m.Keyword)))
		i += copy(dAtA[i:], m.Keyword)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(m.Data.Size()))
		n10, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}

func (m *VoteUpPostRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteUpPostRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	return i, nil
}

func (m *VoteDownPostRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteDownPostRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	return i, nil
}

func (m *BookmarkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BookmarkRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBlogPost(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	return i, nil
}

func encodeVarintBlogPost(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *CreatePostRequest) Size() (n int) {
	var l int
	_ = l
	if m.Post != nil {
		l = m.Post.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *CreatePostResponse) Size() (n int) {
	var l int
	_ = l
	if m.Post != nil {
		l = m.Post.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *GetPostByIdRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *GetPostByIdResponse) Size() (n int) {
	var l int
	_ = l
	if m.Post != nil {
		l = m.Post.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *GetPostsRequest) Size() (n int) {
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *GetOwnPostsRequest) Size() (n int) {
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *GetPublishedPostsResquest) Size() (n int) {
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *GetRelatedPostsRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovBlogPost(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *ListPostsResponse) Size() (n int) {
	var l int
	_ = l
	if len(m.Post) > 0 {
		for _, e := range m.Post {
			l = e.Size()
			n += 1 + l + sovBlogPost(uint64(l))
		}
	}
	return n
}

func (m *UpdatePostRequest) Size() (n int) {
	var l int
	_ = l
	if m.Post != nil {
		l = m.Post.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *UpdatePostResponse) Size() (n int) {
	var l int
	_ = l
	if m.Post != nil {
		l = m.Post.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *DeletePostRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *PublishPostRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovBlogPost(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovBlogPost(uint64(m.Status))
	}
	return n
}

func (m *SearchPostsRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovBlogPost(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *VoteUpPostRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *VoteDownPostRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func (m *BookmarkRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovBlogPost(uint64(l))
	}
	return n
}

func sovBlogPost(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozBlogPost(x uint64) (n int) {
	return sovBlogPost(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *CreatePostRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreatePostRequest{`,
		`Post:` + strings.Replace(fmt.Sprintf("%v", this.Post), "Post", "Post", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreatePostResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreatePostResponse{`,
		`Post:` + strings.Replace(fmt.Sprintf("%v", this.Post), "Post", "Post", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetPostByIdRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetPostByIdRequest{`,
		`PostId:` + fmt.Sprintf("%v", this.PostId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetPostByIdResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetPostByIdResponse{`,
		`Post:` + strings.Replace(fmt.Sprintf("%v", this.Post), "Post", "Post", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetPostsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetPostsRequest{`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetOwnPostsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetOwnPostsRequest{`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetPublishedPostsResquest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetPublishedPostsResquest{`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetRelatedPostsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetRelatedPostsRequest{`,
		`PostId:` + fmt.Sprintf("%v", this.PostId) + `,`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListPostsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListPostsResponse{`,
		`Post:` + strings.Replace(fmt.Sprintf("%v", this.Post), "Post", "Post", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdatePostRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdatePostRequest{`,
		`Post:` + strings.Replace(fmt.Sprintf("%v", this.Post), "Post", "Post", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdatePostResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdatePostResponse{`,
		`Post:` + strings.Replace(fmt.Sprintf("%v", this.Post), "Post", "Post", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeletePostRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeletePostRequest{`,
		`PostId:` + fmt.Sprintf("%v", this.PostId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PublishPostRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PublishPostRequest{`,
		`PostId:` + fmt.Sprintf("%v", this.PostId) + `,`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SearchPostsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SearchPostsRequest{`,
		`Keyword:` + fmt.Sprintf("%v", this.Keyword) + `,`,
		`Data:` + strings.Replace(fmt.Sprintf("%v", this.Data), "Pagination", "Pagination", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *VoteUpPostRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&VoteUpPostRequest{`,
		`PostId:` + fmt.Sprintf("%v", this.PostId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *VoteDownPostRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&VoteDownPostRequest{`,
		`PostId:` + fmt.Sprintf("%v", this.PostId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *BookmarkRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BookmarkRequest{`,
		`PostId:` + fmt.Sprintf("%v", this.PostId) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringBlogPost(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *CreatePostRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreatePostRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreatePostRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Post == nil {
				m.Post = &Post{}
			}
			if err := m.Post.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreatePostResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreatePostResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreatePostResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Post == nil {
				m.Post = &Post{}
			}
			if err := m.Post.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPostByIdRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPostByIdRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPostByIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPostByIdResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPostByIdResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPostByIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Post == nil {
				m.Post = &Post{}
			}
			if err := m.Post.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPostsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPostsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPostsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetOwnPostsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetOwnPostsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetOwnPostsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPublishedPostsResquest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPublishedPostsResquest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPublishedPostsResquest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRelatedPostsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRelatedPostsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRelatedPostsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListPostsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListPostsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListPostsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Post = append(m.Post, &Post{})
			if err := m.Post[len(m.Post)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePostRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePostRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePostRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Post == nil {
				m.Post = &Post{}
			}
			if err := m.Post.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePostResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePostResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePostResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Post == nil {
				m.Post = &Post{}
			}
			if err := m.Post.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeletePostRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeletePostRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeletePostRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PublishPostRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PublishPostRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PublishPostRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchPostsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchPostsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchPostsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Pagination{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteUpPostRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteUpPostRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteUpPostRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteDownPostRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteDownPostRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteDownPostRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BookmarkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BookmarkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BookmarkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBlogPost
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBlogPost(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBlogPost
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBlogPost(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBlogPost
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBlogPost
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthBlogPost
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowBlogPost
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipBlogPost(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthBlogPost = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBlogPost   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("blog_post.proto", fileDescriptorBlogPost) }

var fileDescriptorBlogPost = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x41, 0x4f, 0xe2, 0x40,
	0x14, 0xc7, 0x3b, 0xbb, 0x2c, 0x64, 0xdf, 0x1e, 0xd8, 0x96, 0x84, 0x65, 0x3d, 0x4c, 0x4c, 0xe3,
	0xc1, 0x18, 0xec, 0xc1, 0x6a, 0x4c, 0xbc, 0x89, 0x18, 0x42, 0x62, 0xa2, 0xa9, 0xa2, 0x47, 0x32,
	0xb5, 0x13, 0x68, 0xa8, 0x9d, 0xda, 0x19, 0x42, 0xb8, 0xf9, 0x11, 0xfc, 0x18, 0x7e, 0x14, 0x8f,
	0x1c, 0x3d, 0x4a, 0xbd, 0x78, 0xe4, 0x23, 0x98, 0x29, 0xad, 0x81, 0x88, 0x50, 0x8e, 0xef, 0xcd,
	0xff, 0xf7, 0xfe, 0xd3, 0x7f, 0x5f, 0x06, 0x8a, 0xb6, 0xc7, 0x3a, 0xed, 0x80, 0x71, 0x61, 0x04,
	0x21, 0x13, 0x4c, 0xcb, 0xc9, 0xc6, 0x06, 0xd8, 0x84, 0xd3, 0x69, 0x47, 0x37, 0x41, 0x3d, 0x09,
	0x29, 0x11, 0xf4, 0x82, 0x71, 0x61, 0xd1, 0xfb, 0x3e, 0xe5, 0x42, 0xc3, 0x90, 0x93, 0x50, 0x05,
	0x6d, 0xa2, 0xed, 0x3f, 0x7b, 0x60, 0x48, 0xca, 0x88, 0x05, 0x71, 0x5f, 0xdf, 0x07, 0x6d, 0x16,
	0xe2, 0x01, 0xf3, 0x39, 0x5d, 0x49, 0xed, 0x82, 0xd6, 0xa0, 0x42, 0x36, 0x6a, 0xc3, 0xa6, 0x93,
	0x7a, 0xfd, 0x83, 0x82, 0x3c, 0x6d, 0xbb, 0x4e, 0x0c, 0xfe, 0xb6, 0xf2, 0xb2, 0x6c, 0x3a, 0xfa,
	0x01, 0x94, 0xe6, 0xe4, 0x19, 0x5d, 0x0e, 0xa1, 0x98, 0x60, 0x3c, 0xb5, 0xd8, 0x82, 0x9c, 0x43,
	0x04, 0x49, 0x90, 0xbf, 0x09, 0x42, 0x3a, 0xae, 0x4f, 0x84, 0xcb, 0x7c, 0x2b, 0x3e, 0xd5, 0x8f,
	0xe2, 0xeb, 0x9d, 0x0f, 0xfc, 0x85, 0xec, 0x8f, 0xa5, 0xec, 0x31, 0xfc, 0x97, 0xa6, 0x7d, 0xdb,
	0x73, 0x79, 0x97, 0x3a, 0xc9, 0x04, 0xbe, 0x8e, 0xfd, 0x0d, 0x94, 0x1b, 0x54, 0x58, 0xd4, 0x23,
	0xe2, 0x73, 0xc0, 0xf2, 0x84, 0x32, 0xde, 0xcd, 0x04, 0xf5, 0xcc, 0xe5, 0x69, 0x22, 0x5f, 0x52,
	0xfc, 0xb9, 0x30, 0x45, 0x13, 0xd4, 0x56, 0xe0, 0xac, 0xbf, 0x16, 0xb3, 0x50, 0xc6, 0x1f, 0x56,
	0x05, 0xb5, 0x4e, 0x3d, 0x3a, 0x6f, 0xf5, 0xed, 0x56, 0x9c, 0x82, 0x96, 0xc4, 0x9c, 0x45, 0xae,
	0x95, 0x21, 0xcf, 0x05, 0x11, 0x7d, 0x1e, 0x87, 0xf4, 0xcb, 0x4a, 0x2a, 0xfd, 0x0a, 0xb4, 0x4b,
	0x4a, 0xc2, 0xdb, 0xee, 0x5c, 0xd2, 0x15, 0x28, 0xf4, 0xe8, 0x70, 0xc0, 0xc2, 0x74, 0x4c, 0x5a,
	0x66, 0x8c, 0xba, 0x0a, 0xea, 0x35, 0x13, 0xb4, 0x15, 0x64, 0xfa, 0x14, 0x03, 0x4a, 0x52, 0x5d,
	0x67, 0xd3, 0x95, 0x5b, 0xa9, 0xdf, 0x81, 0x62, 0x8d, 0xb1, 0xde, 0x1d, 0x09, 0x7b, 0xab, 0xb4,
	0xb5, 0xea, 0x68, 0x8c, 0x95, 0x97, 0x31, 0x56, 0x26, 0x63, 0x8c, 0x1e, 0x22, 0x8c, 0x9e, 0x22,
	0x8c, 0x9e, 0x23, 0x8c, 0x46, 0x11, 0x46, 0xaf, 0x11, 0x46, 0xef, 0x11, 0x56, 0x26, 0x11, 0x46,
	0x8f, 0x6f, 0x58, 0xb1, 0xf3, 0xf1, 0x5b, 0x60, 0x7e, 0x04, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x09,
	0x61, 0x8b, 0x30, 0x04, 0x00, 0x00,
}
